language: cpp
env:
  global:
    secure: FoPCwIlEKUUIwpSMGomm+Dfsv/Cp7ITqFVq5u++AAWp6WniX22NkkoPhCnbq3YxXrt0RQhK0P+pe6iJeQNgtm4seYWZO/pWj+frkW52kRWiEgMgKoAWx28vHVvcuqVr5lHAiezMoyrrKrmAJEznO0mTryDc1Ez3fzjSoIoY5r653TZEJNOJ5wU07oTVgGtTkKY9gsHM1s9fNu2ikmKrLQoe8VPJZpkSQPJp5YipghijYQUbeRyHnNMkxWZk34YCRTo2XIRiFBUKfC2efGLPvzGYjwAFYDHQUEKV4lVyg9S6e1BqoFH74vfgF2Vs6DADmWqImwC3RtrADh6wRpxSkADnCv+t3wc3mhuvYX74IDx6H0BFqYvWJwrkmXmnEQonBc/0db/mSiKfz6jp9i7vJl1XEtaYZ3Teic732ziOqUIbm4HjHCBDSqlC4mIlSDJnGAFvVjfZL1W1hbkUPaG1KpmEZ5hiE7mu2kf3DkFjiBdwBSTs5wlgmqmzHvvtAg1P6TdkR2uyIUCCkX4628sWzhfIfTV9XrophJw7jS+PD8dy5tdJclZvIXlw6JbiDPRpF7Vm6orDk/cY5sQ6Sv4+CZd0ml3AaSblR8JkXLCUu21/c2jxJwewYD7MFGNLcLueAK7pycZ9o3YII2zHlfuPRNAWEjS2AjgjCnk52+xhIDW4=
matrix:
  include:
    - os: linux
      dist: precise
      env: BUILD_STATIC=false DEBUG=false ASAN=false
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-8
            - g++-8
            - gfortran-8
            - libgfortran-8-dev
            - liblapack-dev
            - libamd2.2.0
            - libcholmod1.7.1
            - libsuitesparse-dev
            - chrpath
      install:
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 90
        - sudo update-alternatives --install /usr/bin/gfortran gfortran \
          /usr/bin/gfortran-8 90
        - sudo update-alternatives --install /usr/bin/cpp cpp /usr/bin/cpp-8 90
    - os: linux
      dist: precise
      env: BUILD_STATIC=false DEBUG=false ASAN=false
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-9
            - g++-9
            - gfortran-9
            - libgfortran-9-dev
            - liblapack-dev
            - libamd2.2.0
            - libcholmod1.7.1
            - libmetis-edf-dev
            - libsuitesparse-dev
            - chrpath
      install:
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90
        - sudo update-alternatives --install /usr/bin/gfortran gfortran \
          /usr/bin/gfortran-9 90
        - sudo update-alternatives --install /usr/bin/cpp cpp /usr/bin/cpp-9 90
    - os: linux
      dist: precise
      env: BUILD_STATIC=false DEBUG=true ASAN=false
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-9
            - g++-9
            - gfortran-9
            - libgfortran-9-dev
            - liblapack-dev
            - libamd2.2.0
            - libcholmod1.7.1
            - libmetis-edf-dev
            - libsuitesparse-dev
            - chrpath
      install:
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90
        - sudo update-alternatives --install /usr/bin/gfortran gfortran \
          /usr/bin/gfortran-9 90
        - sudo update-alternatives --install /usr/bin/cpp cpp /usr/bin/cpp-9 90
    - os: linux
      dist: bionic
      env: BUILD_STATIC=true DEBUG=false ASAN=false
      addons:
        apt:
          packages:
            - gfortran
            - liblapack-dev
            - libmetis-dev
            - libnauty2-dev
    - os: linux
      dist: bionic
      env: BUILD_STATIC=false DEBUG=false ASAN=false
      addons:
        apt:
          packages:
            - gfortran
            - liblapack-dev
            - libmetis-dev
            - libnauty2-dev
    - os: linux
      dist: xenial
      env: BUILD_STATIC=true DEBUG=false ASAN=false
      addons:
        apt:
          packages:
            - gfortran
            - libgfortran-5-dev
            - liblapack-dev
            - libmetis-dev
            - libnauty2-dev
    - os: osx
      osx_image: xcode11
      env: OSX=10.14 CC=gcc CXX=g++ BUILD_STATIC=false DEBUG=false ASAN=false
      compiler: clang
    - os: osx
      osx_image: xcode11
      env: OSX=10.14  BUILD_STATIC=false DEBUG=false ASAN=false
      compiler: clang
    - os: osx
      osx_image: xcode10
      env: OSX=10.13  BUILD_STATIC=false DEBUG=false ASAN=false
      compiler: clang
    - os: windows
    
before_install:
- |-
    case $TRAVIS_OS_NAME in
      osx)
        brew update
        brew install metis bash gcc
        if [ $CC = gcc ]; then
          export CC=gcc-9
          export CXX=g++-9
        fi
        ;;
      windows)
        [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
        choco uninstall -y mingw
        choco upgrade --no-progress -y msys2
        export msys2='cmd //C RefreshEnv.cmd '
        export msys2+='& set MSYS=winsymlinks:nativestrict '
        export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
        export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
        export msys2+=" -msys2 -c "\"\$@"\" --"
        $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain
        $msys2 pacman -S mingw-w64-x86_64-lapack --noconfirm
        $msys2 pacman -S mingw-w64-x86_64-winpthreads-git --noconfirm
        $msys2 pacman -S mingw-w64-x86_64-readline --noconfirm
        $msys2 pacman -S mingw-w64-x86_64-suitesparse --noconfirm
        $msys2 pacman -S mingw-w64-x86_64-metis --noconfirm
        $msys2 pacman -S make wget tar patch dos2unix diffutils --noconfirm
        $msys2 pacman -S pkg-config git zip unzip --noconfirm
        taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
        export PATH=/C/tools/msys64/mingw64/bin:$PATH
        export MAKE=mingw32-make  # so that Autotools can find it
        ;;
    esac
    case $CC in
      gcc*)
        CCVERSION=$($CC -dumpversion)
        ;;
      clang)
        #CCVERSION=$(clang --version |& fgrep version |& sed "s/.*version \([0-9]*\.[0-9]*\).*/\1/")
        ;;
    esac    
    if [ $DEBUG = "true" ]; then
      DBG_ARGS="--enable-debug"
      DBGN="-dbg"
      export CXXFLAGS="-Og -g"
    fi
    if [ $ASAN = "true" ]; then
      ASN="-asan"
      export CXXFLAGS="${CXXFLAGS} -fsanitize=address"
      export LDFLAGS="-lasan"
    fi
    if [ $BUILD_STATIC = "true' ]; then
      STATIC="-static"
      ADD_ARGS="--static --with-lapack='-llapack -lblas -lgfortran -lquadmath -lm'"
    fi     
    COMMON_ARGS="--no-prompt --verbosity 2 --tests main --enable-relocatable"
    PLATFORM=$TRAVIS_OS_NAME${OSX:-}-x86_64-$CC$CCVERSION
    cd ..
    wget https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew
    PROJECT_URL=https://github.com/$TRAVIS_REPO_SLUG
    PROJECT=$(echo $TRAVIS_REPO_SLUG | cut -d "/" -f 2)
    ./coinbrew fetch $PROJECT_URL:$TRAVIS_BRANCH --no-prompt --skip-update 

before_cache:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        # https://unix.stackexchange.com/a/137322/107554
        $msys2 pacman --sync --clean --noconfirm
        ;;
    esac

script:
- |-
    ./coinbrew build $PROJECT $COMMON_ARGS $ADD_ARGS ${DBG_ARGS:-}

after_script:
- |-
    if [ $TRAVIS_BRANCH = "master" ]; then 
      VERSION=master 
    else 
      VERSION=`echo $TRAVIS_BRANCH | cut -d "/" -f 2`
    fi
    
    case $TRAVIS_OS_NAME in
      linux)
        TGZ_FILE=$PROJECT-$VERSION${STATIC:-}-$TRAVIS_DIST-$PLATFORM${DBGN:-}${ASN:-}.tgz
        ;;
      *)
        TGZ_FILE=$PROJECT-$VERSION${STATIC:-}-$PLATFORM${DBGN:-}${ASN:-}.tgz
    esac
    echo $TGZ_FILE
    cp README.md LICENSE AUTHORS dist
    cd dist
    if [ $TRAVIS_OS_NAME = "linux" ]] && [ $TRAVIS_DIST = precise ]; then
      # adding required libraries
      cp /usr/lib/lapack/liblapack.so.3gf lib/
      cp /usr/lib/x86_64-linux-gnu/libgfortran.so.5 lib/
      cp /usr/lib/x86_64-linux-gnu/libgfortran.so.3 lib/
      cp /usr/lib/x86_64-linux-gnu/libstdc++.so.6 lib/
      cp /usr/lib/libblas/libblas.so.3gf lib/
      cp /lib/x86_64-linux-gnu/libreadline.so.6 lib/
      cp /lib/x86_64-linux-gnu/libbz2.so.1.0 lib/
      cp /lib/x86_64-linux-gnu/libtinfo.so.5 lib/
      cp /usr/lib/x86_64-linux-gnu/libquadmath.so.0 lib/
      cp /usr/lib/libcholmod.so.1.7.1 lib/
      cp /usr/lib/libamd.so.2.2.0 lib/
      cp /usr/lib/libcolamd.so.2.7.1 lib/
      cp /usr/lib/libmetis-edf.so.* lib/
    
      for libfile in lib/*.so*
      do
        chrpath -r ./ $libfile
      done

      chrpath -r \$\ORIGIN/../lib/ bin/cbc
      chrpath -r \$\ORIGIN/../lib/ bin/clp
      chrpath -r \$\ORIGIN/../lib/ bin/glpsol
    fi
    rm lib/*.la
    tar -czvf $TGZ_FILE lib/* bin/* include/* share/* README.md LICENSE AUTHORS
    curl -T $TGZ_FILE -utkralphs:$BINTRAY_API -H "X-Bintray-Publish:1" -H "X-Bintray-Override:1" https://api.bintray.com/content/coin-or/download/$PROJECT/$VERSION/$TGZ_FILE
    while [[ ! $(curl -utkralphs:$BINTRAY_API -X PUT \
                 -H \"Content-Type: application/json\" \
                 -d'{\"list_in_downloads\":true}' \
                 https://api.bintray.com/file_metadata/coin-or/download/$TGZ_FILE` =~ success ]]; do 
      echo \"Command failed...trying again 10 seconds\"
      sleep 10
    done

cache:
    directories:
    - $HOME/AppData/Local/Temp/chocolatey
    - /C/tools/msys64