language: cpp
env:
  global:
    secure: FoPCwIlEKUUIwpSMGomm+Dfsv/Cp7ITqFVq5u++AAWp6WniX22NkkoPhCnbq3YxXrt0RQhK0P+pe6iJeQNgtm4seYWZO/pWj+frkW52kRWiEgMgKoAWx28vHVvcuqVr5lHAiezMoyrrKrmAJEznO0mTryDc1Ez3fzjSoIoY5r653TZEJNOJ5wU07oTVgGtTkKY9gsHM1s9fNu2ikmKrLQoe8VPJZpkSQPJp5YipghijYQUbeRyHnNMkxWZk34YCRTo2XIRiFBUKfC2efGLPvzGYjwAFYDHQUEKV4lVyg9S6e1BqoFH74vfgF2Vs6DADmWqImwC3RtrADh6wRpxSkADnCv+t3wc3mhuvYX74IDx6H0BFqYvWJwrkmXmnEQonBc/0db/mSiKfz6jp9i7vJl1XEtaYZ3Teic732ziOqUIbm4HjHCBDSqlC4mIlSDJnGAFvVjfZL1W1hbkUPaG1KpmEZ5hiE7mu2kf3DkFjiBdwBSTs5wlgmqmzHvvtAg1P6TdkR2uyIUCCkX4628sWzhfIfTV9XrophJw7jS+PD8dy5tdJclZvIXlw6JbiDPRpF7Vm6orDk/cY5sQ6Sv4+CZd0ml3AaSblR8JkXLCUu21/c2jxJwewYD7MFGNLcLueAK7pycZ9o3YII2zHlfuPRNAWEjS2AjgjCnk52+xhIDW4=
matrix:
  include:
    - os: linux
      env: BUILD_STATIC=false
      addons:
        apt:
          packages:
            - gfortran
            - libgfortran-5-dev
            - liblapack-dev
    - os: linux
      dist: precise
      env: BUILD_STATIC=false
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-8
            - g++-8
            - gfortran-8
            - libgfortran-8-dev
            - liblapack-dev
            - libamd2.2.0
            - libcholmod1.7.1
            - libsuitesparse-dev
      install:
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 90
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 90
        - sudo update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-8 90
        - sudo update-alternatives --install /usr/bin/cpp cpp /usr/bin/cpp-8 90
    - os: linux
      dist: precise
      env: BUILD_STATIC=false
      addons:
        apt:
          sources:
            - sourceline: 'ppa:ubuntu-toolchain-r/test'
          packages:
            - gcc-9
            - g++-9
            - gfortran-9
            - libgfortran-9-dev
            - liblapack-dev
            - libamd2.2.0
            - libcholmod1.7.1
            - libsuitesparse-dev
      install:
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90
        - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 90
        - sudo update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-9 90
        - sudo update-alternatives --install /usr/bin/cpp cpp /usr/bin/cpp-9 90
    - os: linux
      dist: bionic
      env: BUILD_STATIC=true
      addons:
        apt:
          packages:
            - gfortran
            - liblapack-dev
    - os: osx
      osx_image: xcode11
      env: OSX=10.14 CC=gcc CXX=g++ BUILD_STATIC=false
      compiler: clang
    - os: osx
      osx_image: xcode11
      env: OSX=10.14  BUILD_STATIC=false
      compiler: clang
    - os: osx
      osx_image: xcode10
      env: OSX=10.13  BUILD_STATIC=false
      compiler: clang

before_script:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then if [ x`brew list | fgrep bash` != x'bash' ]; then brew install bash; fi; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then if [ x`brew list | fgrep gcc` != x'gcc' ]; then brew install gcc; fi; fi
  - if [[ "$TRAVIS_OS_NAME $CC" == "osx gcc" ]]; then export CC=gcc-9 ; export CXX=g++-9 ; $CC --version; $CXX --version; gfortran --version; fi
  - if [[ "$TRAVIS_OS_NAME $CC" == "osx clang" ]]; then  export PLATFORM=osx$OSX-x86_64-clang`clang -dumpversion`; fi
  - if [[ "$TRAVIS_OS_NAME $CC" == "osx gcc-9" ]]; then  export PLATFORM=osx$OSX-x86_64-gcc`gcc-9 -dumpversion`; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then  export PLATFORM=linux-x86_64-gcc`gcc -dumpversion`; fi
  - cd ..
  - wget https://raw.githubusercontent.com/coin-or/coinbrew/master/coinbrew
  - export PROJECT_URL=https://github.com/$TRAVIS_REPO_SLUG
  - export PROJECT=`echo $TRAVIS_REPO_SLUG | cut -d "/" -f 2`
  - bash ./coinbrew fetch $PROJECT_URL:$TRAVIS_BRANCH --no-prompt --skip-update 

script:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ $BUILD_STATIC == "true" ]]; then bash ./coinbrew build $PROJECT --no-prompt --verbosity=3 --enable-relocatable --fully-static --with-lapack="-llapack -lblas -lgfortran -lquadmath -lm"; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ $BUILD_STATIC == "false" ]]; then bash ./coinbrew build $PROJECT --no-prompt --verbosity=3 --tests main --enable-relocatable; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then bash ./coinbrew build $PROJECT --no-prompt --verbosity=3 --tests none --enable-relocatable; fi

after_script:
  - if [ $TRAVIS_BRANCH = "master" ]; then export VERSION=master; else export VERSION=`echo $TRAVIS_BRANCH | cut -d "/" -f 2`; fi
  - if [ $BUILD_STATIC = "false" ]; then export TGZ_FILE=$PROJECT-$VERSION-$PLATFORM.tgz; else export TGZ_FILE=$PROJECT-$VERSION-static-$PLATFORM.tgz; fi
  - echo $TGZ_FILE
  - cp README.md LICENSE AUTHORS dist
  - cd dist
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]] && [[ "$TRAVIS_DIST" == "precise" ]];
    then
      # adding required libraries
      cp /usr/lib/lapack/liblapack.so.3gf lib/
      cp /usr/lib/x86_64-linux-gnu/libgfortran.so.5 lib/
      cp /usr/lib/x86_64-linux-gnu/libgfortran.so.3 lib/
      cp /usr/lib/x86_64-linux-gnu/libstdc++.so.6 lib/
      cp /usr/lib/libblas/libblas.so.3gf lib/
      cp /lib/x86_64-linux-gnu/libreadline.so.6 lib/
      cp /lib/x86_64-linux-gnu/libbz2.so.1.0 lib/
      cp /lib/x86_64-linux-gnu/libtinfo.so.5 lib/
      cp /usr/lib/x86_64-linux-gnu/libquadmath.so.0 lib/
      # CBC Launcher script
      mv bin/cbc bin/cbc.bin
      echo "#! /bin/sh"
      echo "# Wrapper to launch CBC and set the library path in Linux" > bin/cbc
      echo "SCRIPTPATH=\"\$( cd \"\$(dirname \"\$0\")\" >/dev/null 2>&1 ; pwd -P )\"" >> bin/cbc
      echo "LIB_PATH=\$(echo \$SCRIPTPATH | sed -e 's/\/bin\$/\/lib/g')" >> bin/cbc
      echo "LIB_PATH=\$(echo \$LIB_PATH | sed -e 's/\/bin\/\$/\/lib/g')" >> bin/cbc
      echo "OLD_LP=\$LD_LIBRARY_PATH" >> bin/cbc
      echo "export LD_LIBRARY_PATH=\$LIB_PATH:\$LD_LIBRARY_PATH" >> bin/cbc
      echo "\${SCRIPTPATH}/cbc.bin \$@" >> bin/cbc
      echo "export LD_LIBRARY_PATH=\$OLD_LP" >> bin/cbc
      echo "exit \$?" >> bin/cbc
      chmod a+rx bin/cbc
      # CLP Launcher script
      mv bin/clp bin/clp.bin
      echo "#! /bin/sh"
      echo "# Wrapper to launch CLP and set the library path in Linux" > bin/clp
      echo "SCRIPTPATH=\"\$( cd \"\$(dirname \"\$0\")\" >/dev/null 2>&1 ; pwd -P )\"" >> bin/clp
      echo "LIB_PATH=\$(echo \$SCRIPTPATH | sed -e 's/\/bin\$/\/lib/g')" >> bin/clp
      echo "LIB_PATH=\$(echo \$LIB_PATH | sed -e 's/\/bin\/\$/\/lib/g')" >> bin/clp
      echo "OLD_LP=\$LD_LIBRARY_PATH" >> bin/clp
      echo "export LD_LIBRARY_PATH=\$LIB_PATH:\$LD_LIBRARY_PATH" >> bin/clp
      echo "\${SCRIPTPATH}/clp.bin \$@" >> bin/clp
      echo "export LD_LIBRARY_PATH=\$OLD_LP" >> bin/clp
      echo "exit \$?" >> bin/clp
      chmod a+rx bin/clp
    fi
  - tar -czvf $TGZ_FILE lib/* bin/* include/* share/* README.md LICENSE AUTHORS
  - curl -T $TGZ_FILE -utkralphs:$BINTRAY_API -H "X-Bintray-Publish:1" -H "X-Bintray-Override:1" https://api.bintray.com/content/coin-or/download/$PROJECT/$VERSION/$TGZ_FILE

after_failure:
  - find .. -name config.log -exec tail -n 1000 {} \;
