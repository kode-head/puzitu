# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (C) 2006, 2007 International Business Machines and others.
# All Rights Reserved.
# This file is distributed under the Eclipse Public License.

# Author:  Andreas Waechter           IBM    2006-04-13

# Copyright (C) 2006, 2007 International Business Machines and others.
# All Rights Reserved.
# This file is distributed under the Eclipse Public License.

# Author:  Andreas Waechter           IBM    2006-04-13

########################################################################
#        Variables for documentation and data directories              #
########################################################################

# Set these up to provide some uniformity in naming while also conforming
# to Gnu directory standards. For reasons known only to the autoconf
# developers, autoconf leaves datadir = $(datarootdir) but forces docdir
# to $(datarootdir)/doc/$(PACKAGE_TARNAME).



VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2)
@COIN_HAS_NAUTY_TRUE@am__append_1 = -DCOIN_HAS_NTY $(NAUTY_CFLAGS)

########################################################################
#                            cbc program                               #
########################################################################

# Name of the executable compiled in this directory.  We want it to be
# installed in the 'bin' directory
@COIN_HAS_CLP_TRUE@am__append_2 = cbc
#cbc_DEPENDENCIES = libCbcSolver.la libCbc.la $(CBCLIB_DEPENDENCIES) $(ASL_DEPENDENCIES)

########################################################################
#                        cbc-generic program                           #
########################################################################

# Name of the executable compiled in this directory.  We want it to be
# installed in the 'bin' directory
@CBC_BUILD_CBC_GENERIC_TRUE@am__append_3 = cbc-generic
# cbc_generic_DEPENDENCIES = libCbcSolver.la libCbc.la $(CBCGENERIC_DEPENDENCIES)

# List all additionally required solver and Osi libraries
# the linker flags for all available LP solvers should already be included in $CBCGENERIC_LIBS,
# so just add compiler flags here (all we can think of)
@CBC_BUILD_CBC_GENERIC_TRUE@am__append_4 = $(CBCGENERIC_CFLAGS)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(includecoin_HEADERS)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h config_cbc.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
@COIN_HAS_CLP_TRUE@am__EXEEXT_1 = cbc$(EXEEXT)
@CBC_BUILD_CBC_GENERIC_TRUE@am__EXEEXT_2 = cbc-generic$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(includecoindir)"
PROGRAMS = $(bin_PROGRAMS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libCbc_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_libCbc_la_OBJECTS = CbcBranchAllDifferent.lo CbcBranchCut.lo \
	CbcBranchDecision.lo CbcBranchDefaultDecision.lo \
	CbcBranchDynamic.lo CbcBranchingObject.lo CbcBranchLotsize.lo \
	CbcBranchToFixLots.lo CbcCompareDefault.lo CbcCompareDepth.lo \
	CbcCompareEstimate.lo CbcCompareObjective.lo CbcConsequence.lo \
	CbcClique.lo CbcCountRowCut.lo CbcCutGenerator.lo \
	CbcCutModifier.lo CbcCutSubsetModifier.lo \
	CbcDummyBranchingObject.lo CbcEventHandler.lo CbcFathom.lo \
	CbcFathomDynamicProgramming.lo CbcFixVariable.lo \
	CbcFullNodeInfo.lo CbcFollowOn.lo CbcGeneral.lo \
	CbcGeneralDepth.lo CbcHeuristic.lo CbcHeuristicDINS.lo \
	CbcHeuristicDive.lo CbcHeuristicDiveCoefficient.lo \
	CbcHeuristicDiveFractional.lo CbcHeuristicDiveGuided.lo \
	CbcHeuristicDiveLineSearch.lo CbcHeuristicDivePseudoCost.lo \
	CbcHeuristicDiveVectorLength.lo CbcHeuristicFPump.lo \
	CbcHeuristicGreedy.lo CbcHeuristicLocal.lo \
	CbcHeuristicPivotAndFix.lo CbcHeuristicRandRound.lo \
	CbcHeuristicRENS.lo CbcHeuristicRINS.lo CbcHeuristicVND.lo \
	CbcHeuristicDW.lo CbcMessage.lo CbcModel.lo CbcNode.lo \
	CbcNodeInfo.lo CbcNWay.lo CbcObject.lo CbcObjectUpdateData.lo \
	CbcPartialNodeInfo.lo CbcSimpleInteger.lo \
	CbcSimpleIntegerDynamicPseudoCost.lo \
	CbcSimpleIntegerPseudoCost.lo CbcSOS.lo CbcStatistics.lo \
	CbcStrategy.lo CbcSubProblem.lo CbcSymmetry.lo CbcThread.lo \
	CbcTree.lo CbcTreeLocal.lo
libCbc_la_OBJECTS = $(am_libCbc_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libCbc_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libCbc_la_LDFLAGS) $(LDFLAGS) -o $@
libCbcSolver_la_DEPENDENCIES = $(am__DEPENDENCIES_1) libCbc.la
am_libCbcSolver_la_OBJECTS = Cbc_C_Interface.lo CbcCbcParam.lo \
	Cbc_ampl.lo CbcLinked.lo CbcLinkedUtils.lo unitTestClp.lo \
	CbcSolver.lo CbcSolverHeuristics.lo CbcSolverAnalyze.lo \
	CbcMipStartIO.lo CbcSolverExpandKnapsack.lo
libCbcSolver_la_OBJECTS = $(am_libCbcSolver_la_OBJECTS)
libCbcSolver_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libCbcSolver_la_LDFLAGS) \
	$(LDFLAGS) -o $@
@COIN_HAS_CLP_TRUE@am_cbc_OBJECTS = CoinSolve.$(OBJEXT)
cbc_OBJECTS = $(am_cbc_OBJECTS)
@COIN_HAS_CLP_TRUE@cbc_DEPENDENCIES = libCbcSolver.la libCbc.la \
@COIN_HAS_CLP_TRUE@	$(am__DEPENDENCIES_1)
@CBC_BUILD_CBC_GENERIC_TRUE@am_cbc_generic_OBJECTS =  \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenBaB.$(OBJEXT) \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenCbcParam.$(OBJEXT) \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenCbcParamUtils.$(OBJEXT) \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenCtlBlk.$(OBJEXT) \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGeneric.$(OBJEXT) \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenMessages.$(OBJEXT) \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenOsiParam.$(OBJEXT) \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenOsiParamUtils.$(OBJEXT) \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenParam.$(OBJEXT) \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenParamUtils.$(OBJEXT) \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenSolution.$(OBJEXT) \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenSolvers.$(OBJEXT)
cbc_generic_OBJECTS = $(am_cbc_generic_OBJECTS)
@CBC_BUILD_CBC_GENERIC_TRUE@cbc_generic_DEPENDENCIES =  \
@CBC_BUILD_CBC_GENERIC_TRUE@	libCbcSolver.la libCbc.la \
@CBC_BUILD_CBC_GENERIC_TRUE@	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/CbcBranchAllDifferent.Plo \
	./$(DEPDIR)/CbcBranchCut.Plo ./$(DEPDIR)/CbcBranchDecision.Plo \
	./$(DEPDIR)/CbcBranchDefaultDecision.Plo \
	./$(DEPDIR)/CbcBranchDynamic.Plo \
	./$(DEPDIR)/CbcBranchLotsize.Plo \
	./$(DEPDIR)/CbcBranchToFixLots.Plo \
	./$(DEPDIR)/CbcBranchingObject.Plo ./$(DEPDIR)/CbcCbcParam.Plo \
	./$(DEPDIR)/CbcClique.Plo ./$(DEPDIR)/CbcCompareDefault.Plo \
	./$(DEPDIR)/CbcCompareDepth.Plo \
	./$(DEPDIR)/CbcCompareEstimate.Plo \
	./$(DEPDIR)/CbcCompareObjective.Plo \
	./$(DEPDIR)/CbcConsequence.Plo ./$(DEPDIR)/CbcCountRowCut.Plo \
	./$(DEPDIR)/CbcCutGenerator.Plo ./$(DEPDIR)/CbcCutModifier.Plo \
	./$(DEPDIR)/CbcCutSubsetModifier.Plo \
	./$(DEPDIR)/CbcDummyBranchingObject.Plo \
	./$(DEPDIR)/CbcEventHandler.Plo ./$(DEPDIR)/CbcFathom.Plo \
	./$(DEPDIR)/CbcFathomDynamicProgramming.Plo \
	./$(DEPDIR)/CbcFixVariable.Plo ./$(DEPDIR)/CbcFollowOn.Plo \
	./$(DEPDIR)/CbcFullNodeInfo.Plo ./$(DEPDIR)/CbcGenBaB.Po \
	./$(DEPDIR)/CbcGenCbcParam.Po \
	./$(DEPDIR)/CbcGenCbcParamUtils.Po ./$(DEPDIR)/CbcGenCtlBlk.Po \
	./$(DEPDIR)/CbcGenMessages.Po ./$(DEPDIR)/CbcGenOsiParam.Po \
	./$(DEPDIR)/CbcGenOsiParamUtils.Po ./$(DEPDIR)/CbcGenParam.Po \
	./$(DEPDIR)/CbcGenParamUtils.Po ./$(DEPDIR)/CbcGenSolution.Po \
	./$(DEPDIR)/CbcGenSolvers.Po ./$(DEPDIR)/CbcGeneral.Plo \
	./$(DEPDIR)/CbcGeneralDepth.Plo ./$(DEPDIR)/CbcGeneric.Po \
	./$(DEPDIR)/CbcHeuristic.Plo ./$(DEPDIR)/CbcHeuristicDINS.Plo \
	./$(DEPDIR)/CbcHeuristicDW.Plo \
	./$(DEPDIR)/CbcHeuristicDive.Plo \
	./$(DEPDIR)/CbcHeuristicDiveCoefficient.Plo \
	./$(DEPDIR)/CbcHeuristicDiveFractional.Plo \
	./$(DEPDIR)/CbcHeuristicDiveGuided.Plo \
	./$(DEPDIR)/CbcHeuristicDiveLineSearch.Plo \
	./$(DEPDIR)/CbcHeuristicDivePseudoCost.Plo \
	./$(DEPDIR)/CbcHeuristicDiveVectorLength.Plo \
	./$(DEPDIR)/CbcHeuristicFPump.Plo \
	./$(DEPDIR)/CbcHeuristicGreedy.Plo \
	./$(DEPDIR)/CbcHeuristicLocal.Plo \
	./$(DEPDIR)/CbcHeuristicPivotAndFix.Plo \
	./$(DEPDIR)/CbcHeuristicRENS.Plo \
	./$(DEPDIR)/CbcHeuristicRINS.Plo \
	./$(DEPDIR)/CbcHeuristicRandRound.Plo \
	./$(DEPDIR)/CbcHeuristicVND.Plo ./$(DEPDIR)/CbcLinked.Plo \
	./$(DEPDIR)/CbcLinkedUtils.Plo ./$(DEPDIR)/CbcMessage.Plo \
	./$(DEPDIR)/CbcMipStartIO.Plo ./$(DEPDIR)/CbcModel.Plo \
	./$(DEPDIR)/CbcNWay.Plo ./$(DEPDIR)/CbcNode.Plo \
	./$(DEPDIR)/CbcNodeInfo.Plo ./$(DEPDIR)/CbcObject.Plo \
	./$(DEPDIR)/CbcObjectUpdateData.Plo \
	./$(DEPDIR)/CbcPartialNodeInfo.Plo ./$(DEPDIR)/CbcSOS.Plo \
	./$(DEPDIR)/CbcSimpleInteger.Plo \
	./$(DEPDIR)/CbcSimpleIntegerDynamicPseudoCost.Plo \
	./$(DEPDIR)/CbcSimpleIntegerPseudoCost.Plo \
	./$(DEPDIR)/CbcSolver.Plo ./$(DEPDIR)/CbcSolverAnalyze.Plo \
	./$(DEPDIR)/CbcSolverExpandKnapsack.Plo \
	./$(DEPDIR)/CbcSolverHeuristics.Plo \
	./$(DEPDIR)/CbcStatistics.Plo ./$(DEPDIR)/CbcStrategy.Plo \
	./$(DEPDIR)/CbcSubProblem.Plo ./$(DEPDIR)/CbcSymmetry.Plo \
	./$(DEPDIR)/CbcThread.Plo ./$(DEPDIR)/CbcTree.Plo \
	./$(DEPDIR)/CbcTreeLocal.Plo ./$(DEPDIR)/Cbc_C_Interface.Plo \
	./$(DEPDIR)/Cbc_ampl.Plo ./$(DEPDIR)/CoinSolve.Po \
	./$(DEPDIR)/unitTestClp.Plo
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libCbc_la_SOURCES) $(libCbcSolver_la_SOURCES) \
	$(cbc_SOURCES) $(cbc_generic_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(includecoin_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in config_cbc.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
pkgdatadir = $(datadir)/$(PACKAGE_TARNAME)
pkgincludedir = $(includedir)/coin-or
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CBCGENERIC_CFLAGS = @CBCGENERIC_CFLAGS@
CBCGENERIC_CFLAGS_NOPC = @CBCGENERIC_CFLAGS_NOPC@
CBCGENERIC_LFLAGS = @CBCGENERIC_LFLAGS@
CBCGENERIC_LFLAGS_NOPC = @CBCGENERIC_LFLAGS_NOPC@
CBCGENERIC_PCFILES = @CBCGENERIC_PCFILES@
CBCLIB_CFLAGS = @CBCLIB_CFLAGS@
CBCLIB_CFLAGS_NOPC = @CBCLIB_CFLAGS_NOPC@
CBCLIB_LFLAGS = @CBCLIB_LFLAGS@
CBCLIB_LFLAGS_NOPC = @CBCLIB_LFLAGS_NOPC@
CBCLIB_PCFILES = @CBCLIB_PCFILES@
CBCUNITTEST_CFLAGS = @CBCUNITTEST_CFLAGS@
CBCUNITTEST_CFLAGS_NOPC = @CBCUNITTEST_CFLAGS_NOPC@
CBCUNITTEST_LFLAGS = @CBCUNITTEST_LFLAGS@
CBCUNITTEST_LFLAGS_NOPC = @CBCUNITTEST_LFLAGS_NOPC@
CBCUNITTEST_PCFILES = @CBCUNITTEST_PCFILES@
CBC_SVN_REV = @CBC_SVN_REV@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COIN_PKG_CONFIG_PATH = @COIN_PKG_CONFIG_PATH@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_LDFLAGS = @LT_LDFLAGS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MIPLIB3_DATA = @MIPLIB3_DATA@
MKDIR_P = @MKDIR_P@
NETLIB_DATA = @NETLIB_DATA@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OSICBCLIB_CFLAGS = @OSICBCLIB_CFLAGS@
OSICBCLIB_CFLAGS_NOPC = @OSICBCLIB_CFLAGS_NOPC@
OSICBCLIB_LFLAGS = @OSICBCLIB_LFLAGS@
OSICBCLIB_LFLAGS_NOPC = @OSICBCLIB_LFLAGS_NOPC@
OSICBCLIB_PCFILES = @OSICBCLIB_PCFILES@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PKG_CONFIG = @PKG_CONFIG@
RANLIB = @RANLIB@
SAMPLE_DATA = @SAMPLE_DATA@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_PKG_CONFIG = @ac_ct_PKG_CONFIG@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
coin_doxy_logname = @coin_doxy_logname@
coin_doxy_tagfiles = @coin_doxy_tagfiles@
coin_doxy_tagname = @coin_doxy_tagname@
coin_doxy_usedot = @coin_doxy_usedot@
coin_have_doxygen = @coin_have_doxygen@
coin_have_latex = @coin_have_latex@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
have_svnversion = @have_svnversion@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = foreign
pkgdocdir = $(docdir)

# doxydocdir is the top-level directory for doxygen documentation. It holds
# the tag file and possibly the PDF or Postscript version. doxyhtmldir is
# typically a subdirectory containing all the files doxygen creates for
# html documentation.
doxydocdir = $(pkgdocdir)/doxydoc
doxyhtmldir = $(doxydocdir)/html

########################################################################
#                    Documentation installation                        #
########################################################################
DocFiles = README AUTHORS LICENSE
COIN_HAS_DOXYGEN = @COIN_HAS_DOXYGEN_TRUE@TRUE
COIN_HAS_LATEX = @COIN_HAS_LATEX_TRUE@TRUE

# Needless to say, it's important that baredocdir_nosub not be a target for
# autoconf substitution.
DOXYTAG_EDIT = sed -e 's|@baredocdir_nosub@|$(datarootdir)/doc|g'

########################################################################
#                               libCbc                                 #
########################################################################

# Name of the library compiled in this directory.  We want it to be installed
# in the 'lib' directory
lib_LTLIBRARIES = libCbc.la libCbcSolver.la

# List all source files for this library, including headers
libCbc_la_SOURCES = \
	CbcConfig.h \
	CbcBranchActual.hpp \
	CbcBranchAllDifferent.cpp CbcBranchAllDifferent.hpp \
	CbcBranchBase.hpp \
	CbcBranchCut.cpp CbcBranchCut.hpp \
	CbcBranchDecision.cpp CbcBranchDecision.hpp \
	CbcBranchDefaultDecision.cpp CbcBranchDefaultDecision.hpp \
	CbcBranchDynamic.cpp CbcBranchDynamic.hpp \
	CbcBranchingObject.cpp CbcBranchingObject.hpp \
	CbcBranchLotsize.cpp CbcBranchLotsize.hpp \
	CbcBranchToFixLots.cpp CbcBranchToFixLots.hpp \
	CbcCompareActual.hpp \
	CbcCompareBase.hpp \
	CbcCompareDefault.cpp CbcCompareDefault.hpp \
	CbcCompareDepth.cpp CbcCompareDepth.hpp \
	CbcCompareEstimate.cpp CbcCompareEstimate.hpp \
	CbcCompareObjective.cpp CbcCompareObjective.hpp \
	CbcConsequence.cpp CbcConsequence.hpp \
	CbcClique.cpp CbcClique.hpp \
	CbcCompare.hpp \
	CbcCountRowCut.cpp CbcCountRowCut.hpp \
	CbcCutGenerator.cpp CbcCutGenerator.hpp \
	CbcCutModifier.cpp CbcCutModifier.hpp \
	CbcCutSubsetModifier.cpp CbcCutSubsetModifier.hpp \
	CbcDummyBranchingObject.cpp CbcDummyBranchingObject.hpp \
	CbcEventHandler.cpp CbcEventHandler.hpp \
	CbcFathom.cpp CbcFathom.hpp \
	CbcFathomDynamicProgramming.cpp CbcFathomDynamicProgramming.hpp \
	CbcFeasibilityBase.hpp \
	CbcFixVariable.cpp CbcFixVariable.hpp \
	CbcFullNodeInfo.cpp CbcFullNodeInfo.hpp \
	CbcFollowOn.cpp CbcFollowOn.hpp \
	CbcGeneral.cpp CbcGeneral.hpp \
	CbcGeneralDepth.cpp CbcGeneralDepth.hpp \
	CbcHeuristic.cpp CbcHeuristic.hpp \
	CbcHeuristicDINS.cpp CbcHeuristicDINS.hpp \
	CbcHeuristicDive.cpp CbcHeuristicDive.hpp \
	CbcHeuristicDiveCoefficient.cpp CbcHeuristicDiveCoefficient.hpp \
	CbcHeuristicDiveFractional.cpp CbcHeuristicDiveFractional.hpp \
	CbcHeuristicDiveGuided.cpp CbcHeuristicDiveGuided.hpp \
	CbcHeuristicDiveLineSearch.cpp CbcHeuristicDiveLineSearch.hpp \
	CbcHeuristicDivePseudoCost.cpp CbcHeuristicDivePseudoCost.hpp \
	CbcHeuristicDiveVectorLength.cpp CbcHeuristicDiveLength.hpp \
	CbcHeuristicFPump.cpp CbcHeuristicFPump.hpp \
	CbcHeuristicGreedy.cpp CbcHeuristicGreedy.hpp \
	CbcHeuristicLocal.cpp CbcHeuristicLocal.hpp \
	CbcHeuristicPivotAndFix.cpp CbcHeuristicPivotAndFix.hpp \
	CbcHeuristicRandRound.cpp CbcHeuristicRandRound.hpp \
	CbcHeuristicRENS.cpp CbcHeuristicRENS.hpp \
	CbcHeuristicRINS.cpp CbcHeuristicRINS.hpp \
	CbcHeuristicVND.cpp CbcHeuristicVND.hpp \
	CbcHeuristicDW.cpp CbcHeuristicDW.hpp \
	CbcMessage.cpp CbcMessage.hpp \
	CbcModel.cpp CbcModel.hpp \
	CbcNode.cpp CbcNode.hpp \
	CbcNodeInfo.cpp CbcNodeInfo.hpp \
	CbcNWay.cpp CbcNWay.hpp \
	CbcObject.cpp CbcObject.hpp \
	CbcObjectUpdateData.cpp CbcObjectUpdateData.hpp \
	CbcPartialNodeInfo.cpp CbcPartialNodeInfo.hpp \
	CbcSimpleInteger.cpp CbcSimpleInteger.hpp \
	CbcSimpleIntegerDynamicPseudoCost.cpp \
        CbcSimpleIntegerDynamicPseudoCost.hpp \
	CbcSimpleIntegerPseudoCost.cpp \
        CbcSimpleIntegerPseudoCost.hpp \
	CbcSOS.cpp CbcSOS.hpp \
	CbcStatistics.cpp CbcStatistics.hpp \
	CbcStrategy.cpp CbcStrategy.hpp \
	CbcSubProblem.cpp CbcSubProblem.hpp \
	CbcSymmetry.cpp CbcSymmetry.hpp \
	CbcThread.cpp CbcThread.hpp \
	CbcTree.cpp CbcTree.hpp \
	CbcTreeLocal.cpp CbcTreeLocal.hpp

libCbcSolver_la_SOURCES = \
	Cbc_C_Interface.cpp Cbc_C_Interface.h \
	CbcCbcParam.cpp \
	Cbc_ampl.cpp Cbc_ampl.h \
	CbcLinked.cpp CbcLinked.hpp CbcLinkedUtils.cpp \
	unitTestClp.cpp CbcSolver.cpp \
	CbcSolverHeuristics.cpp CbcSolverHeuristics.hpp \
	CbcSolverAnalyze.cpp CbcSolverAnalyze.hpp \
	CbcMipStartIO.cpp CbcMipStartIO.hpp \
	CbcSolverExpandKnapsack.cpp CbcSolverExpandKnapsack.hpp


# List all additionally required libraries
libCbc_la_LIBADD = $(CBCLIB_LFLAGS)
libCbcSolver_la_LIBADD = $(CBCLIB_LFLAGS) libCbc.la

# This is for libtool
libCbc_la_LDFLAGS = $(LT_LDFLAGS)
libCbcSolver_la_LDFLAGS = $(LT_LDFLAGS)

########################################################################
#                            Additional flags                          #
########################################################################

# List additional defines
AM_CPPFLAGS = -DCBC_BUILD $(CBCLIB_CFLAGS) $(am__append_1) \
	$(am__append_4) -DCOIN_NO_CLP_MESSAGE -DUSE_CBCCONFIG

# List all source files for this executable, including headers
@COIN_HAS_CLP_TRUE@cbc_SOURCES = CoinSolve.cpp

# Additional libraries
@COIN_HAS_CLP_TRUE@cbc_LDADD = libCbcSolver.la libCbc.la $(CBCLIB_LFLAGS)

# List all source files for this executable, including headers
@CBC_BUILD_CBC_GENERIC_TRUE@cbc_generic_SOURCES = \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenBaB.cpp \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenCbcParam.cpp CbcGenCbcParam.hpp CbcGenCbcParamUtils.cpp \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenCtlBlk.cpp CbcGenCtlBlk.hpp \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGeneric.cpp \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenMessages.cpp CbcGenMessages.hpp \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenOsiParam.cpp CbcGenOsiParam.hpp CbcGenOsiParamUtils.cpp \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenParam.cpp CbcGenParam.hpp CbcGenParamUtils.cpp \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenSolution.cpp \
@CBC_BUILD_CBC_GENERIC_TRUE@	CbcGenSolvers.cpp

@CBC_BUILD_CBC_GENERIC_TRUE@cbc_generic_LDADD = libCbcSolver.la libCbc.la $(CBCGENERIC_LFLAGS)

########################################################################
#                Headers that need to be installed                     #
########################################################################

# Here list all the header files that are required by a user of the library,
# and that therefore should be installed in 'include/coin-or'
includecoindir = $(pkgincludedir)
includecoin_HEADERS = \
	Cbc_C_Interface.h \
	CbcBranchActual.hpp \
	CbcBranchAllDifferent.hpp \
	CbcBranchBase.hpp \
	CbcBranchDynamic.hpp \
	CbcBranchCut.hpp \
	CbcBranchDecision.hpp \
	CbcBranchDefaultDecision.hpp \
	CbcBranchingObject.hpp \
	CbcBranchLotsize.hpp \
	CbcBranchToFixLots.hpp \
	CbcCompareActual.hpp \
	CbcCompareBase.hpp \
	CbcCompareDefault.hpp \
	CbcCompareDepth.hpp \
	CbcCompareEstimate.hpp \
	CbcCompareObjective.hpp \
	CbcConsequence.hpp \
	CbcClique.hpp \
	CbcCompare.hpp \
	CbcCountRowCut.hpp \
	CbcCutGenerator.hpp \
	CbcCutModifier.hpp \
	CbcCutSubsetModifier.hpp \
	CbcDummyBranchingObject.hpp \
	CbcFathom.hpp \
	CbcEventHandler.hpp \
	CbcFathomDynamicProgramming.hpp \
	CbcFeasibilityBase.hpp \
	CbcFixVariable.hpp \
	CbcFollowOn.hpp \
	CbcFullNodeInfo.hpp \
	CbcGeneral.hpp \
	CbcGeneralDepth.hpp \
	CbcHeuristic.hpp \
	CbcHeuristicDINS.hpp \
	CbcHeuristicDive.hpp \
	CbcHeuristicDiveCoefficient.hpp \
	CbcHeuristicDiveFractional.hpp \
	CbcHeuristicDiveGuided.hpp \
	CbcHeuristicDiveLineSearch.hpp \
	CbcHeuristicDivePseudoCost.hpp \
	CbcHeuristicDiveVectorLength.hpp \
	CbcHeuristicFPump.hpp \
	CbcHeuristicGreedy.hpp \
	CbcHeuristicLocal.hpp \
	CbcHeuristicPivotAndFix.hpp \
	CbcHeuristicRandRound.hpp \
	CbcHeuristicRENS.hpp \
	CbcHeuristicRINS.hpp \
	CbcHeuristicVND.hpp \
	CbcHeuristicDW.hpp \
	CbcMessage.hpp \
	CbcModel.hpp \
	CbcNode.hpp \
	CbcNodeInfo.hpp \
	CbcNWay.hpp \
        CbcObject.hpp \
	CbcObjectUpdateData.hpp \
	CbcParam.hpp \
	CbcPartialNodeInfo.hpp \
	CbcSimpleInteger.hpp \
	CbcSimpleIntegerDynamicPseudoCost.hpp \
	CbcSimpleIntegerPseudoCost.hpp \
	CbcStrategy.hpp \
	CbcSolver.hpp \
	CbcMipStartIO.hpp \
	CbcSOS.hpp \
	CbcSubProblem.hpp \
	CbcTree.hpp \
	CbcLinked.hpp \
	CbcTreeLocal.hpp \
	ClpConstraintAmpl.hpp \
	ClpAmplObjective.hpp 

all: config.h config_cbc.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(top_srcdir)/BuildTools/Makemain.inc $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/BuildTools/Makemain.inc $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

config_cbc.h: stamp-h2
	@test -f $@ || rm -f stamp-h2
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h2

stamp-h2: $(srcdir)/config_cbc.h.in $(top_builddir)/config.status
	@rm -f stamp-h2
	cd $(top_builddir) && $(SHELL) ./config.status src/config_cbc.h

distclean-hdr:
	-rm -f config.h stamp-h1 config_cbc.h stamp-h2
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libCbc.la: $(libCbc_la_OBJECTS) $(libCbc_la_DEPENDENCIES) $(EXTRA_libCbc_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libCbc_la_LINK) -rpath $(libdir) $(libCbc_la_OBJECTS) $(libCbc_la_LIBADD) $(LIBS)

libCbcSolver.la: $(libCbcSolver_la_OBJECTS) $(libCbcSolver_la_DEPENDENCIES) $(EXTRA_libCbcSolver_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libCbcSolver_la_LINK) -rpath $(libdir) $(libCbcSolver_la_OBJECTS) $(libCbcSolver_la_LIBADD) $(LIBS)

cbc$(EXEEXT): $(cbc_OBJECTS) $(cbc_DEPENDENCIES) $(EXTRA_cbc_DEPENDENCIES) 
	@rm -f cbc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cbc_OBJECTS) $(cbc_LDADD) $(LIBS)

cbc-generic$(EXEEXT): $(cbc_generic_OBJECTS) $(cbc_generic_DEPENDENCIES) $(EXTRA_cbc_generic_DEPENDENCIES) 
	@rm -f cbc-generic$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cbc_generic_OBJECTS) $(cbc_generic_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcBranchAllDifferent.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcBranchCut.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcBranchDecision.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcBranchDefaultDecision.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcBranchDynamic.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcBranchLotsize.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcBranchToFixLots.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcBranchingObject.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcCbcParam.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcClique.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcCompareDefault.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcCompareDepth.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcCompareEstimate.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcCompareObjective.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcConsequence.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcCountRowCut.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcCutGenerator.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcCutModifier.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcCutSubsetModifier.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcDummyBranchingObject.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcEventHandler.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcFathom.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcFathomDynamicProgramming.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcFixVariable.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcFollowOn.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcFullNodeInfo.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGenBaB.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGenCbcParam.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGenCbcParamUtils.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGenCtlBlk.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGenMessages.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGenOsiParam.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGenOsiParamUtils.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGenParam.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGenParamUtils.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGenSolution.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGenSolvers.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGeneral.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGeneralDepth.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcGeneric.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristic.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicDINS.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicDW.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicDive.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicDiveCoefficient.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicDiveFractional.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicDiveGuided.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicDiveLineSearch.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicDivePseudoCost.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicDiveVectorLength.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicFPump.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicGreedy.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicLocal.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicPivotAndFix.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicRENS.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicRINS.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicRandRound.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcHeuristicVND.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcLinked.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcLinkedUtils.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcMessage.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcMipStartIO.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcModel.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcNWay.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcNode.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcNodeInfo.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcObject.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcObjectUpdateData.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcPartialNodeInfo.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcSOS.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcSimpleInteger.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcSimpleIntegerDynamicPseudoCost.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcSimpleIntegerPseudoCost.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcSolver.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcSolverAnalyze.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcSolverExpandKnapsack.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcSolverHeuristics.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcStatistics.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcStrategy.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcSubProblem.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcSymmetry.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcThread.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcTree.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CbcTreeLocal.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Cbc_C_Interface.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Cbc_ampl.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CoinSolve.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unitTestClp.Plo@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includecoinHEADERS: $(includecoin_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(includecoin_HEADERS)'; test -n "$(includecoindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includecoindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includecoindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includecoindir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includecoindir)" || exit $$?; \
	done

uninstall-includecoinHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(includecoin_HEADERS)'; test -n "$(includecoindir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includecoindir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(HEADERS) config.h \
		config_cbc.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includecoindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
@COIN_CXX_IS_CL_FALSE@install-exec-hook:
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/CbcBranchAllDifferent.Plo
	-rm -f ./$(DEPDIR)/CbcBranchCut.Plo
	-rm -f ./$(DEPDIR)/CbcBranchDecision.Plo
	-rm -f ./$(DEPDIR)/CbcBranchDefaultDecision.Plo
	-rm -f ./$(DEPDIR)/CbcBranchDynamic.Plo
	-rm -f ./$(DEPDIR)/CbcBranchLotsize.Plo
	-rm -f ./$(DEPDIR)/CbcBranchToFixLots.Plo
	-rm -f ./$(DEPDIR)/CbcBranchingObject.Plo
	-rm -f ./$(DEPDIR)/CbcCbcParam.Plo
	-rm -f ./$(DEPDIR)/CbcClique.Plo
	-rm -f ./$(DEPDIR)/CbcCompareDefault.Plo
	-rm -f ./$(DEPDIR)/CbcCompareDepth.Plo
	-rm -f ./$(DEPDIR)/CbcCompareEstimate.Plo
	-rm -f ./$(DEPDIR)/CbcCompareObjective.Plo
	-rm -f ./$(DEPDIR)/CbcConsequence.Plo
	-rm -f ./$(DEPDIR)/CbcCountRowCut.Plo
	-rm -f ./$(DEPDIR)/CbcCutGenerator.Plo
	-rm -f ./$(DEPDIR)/CbcCutModifier.Plo
	-rm -f ./$(DEPDIR)/CbcCutSubsetModifier.Plo
	-rm -f ./$(DEPDIR)/CbcDummyBranchingObject.Plo
	-rm -f ./$(DEPDIR)/CbcEventHandler.Plo
	-rm -f ./$(DEPDIR)/CbcFathom.Plo
	-rm -f ./$(DEPDIR)/CbcFathomDynamicProgramming.Plo
	-rm -f ./$(DEPDIR)/CbcFixVariable.Plo
	-rm -f ./$(DEPDIR)/CbcFollowOn.Plo
	-rm -f ./$(DEPDIR)/CbcFullNodeInfo.Plo
	-rm -f ./$(DEPDIR)/CbcGenBaB.Po
	-rm -f ./$(DEPDIR)/CbcGenCbcParam.Po
	-rm -f ./$(DEPDIR)/CbcGenCbcParamUtils.Po
	-rm -f ./$(DEPDIR)/CbcGenCtlBlk.Po
	-rm -f ./$(DEPDIR)/CbcGenMessages.Po
	-rm -f ./$(DEPDIR)/CbcGenOsiParam.Po
	-rm -f ./$(DEPDIR)/CbcGenOsiParamUtils.Po
	-rm -f ./$(DEPDIR)/CbcGenParam.Po
	-rm -f ./$(DEPDIR)/CbcGenParamUtils.Po
	-rm -f ./$(DEPDIR)/CbcGenSolution.Po
	-rm -f ./$(DEPDIR)/CbcGenSolvers.Po
	-rm -f ./$(DEPDIR)/CbcGeneral.Plo
	-rm -f ./$(DEPDIR)/CbcGeneralDepth.Plo
	-rm -f ./$(DEPDIR)/CbcGeneric.Po
	-rm -f ./$(DEPDIR)/CbcHeuristic.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDINS.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDW.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDive.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDiveCoefficient.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDiveFractional.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDiveGuided.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDiveLineSearch.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDivePseudoCost.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDiveVectorLength.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicFPump.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicGreedy.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicLocal.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicPivotAndFix.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicRENS.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicRINS.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicRandRound.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicVND.Plo
	-rm -f ./$(DEPDIR)/CbcLinked.Plo
	-rm -f ./$(DEPDIR)/CbcLinkedUtils.Plo
	-rm -f ./$(DEPDIR)/CbcMessage.Plo
	-rm -f ./$(DEPDIR)/CbcMipStartIO.Plo
	-rm -f ./$(DEPDIR)/CbcModel.Plo
	-rm -f ./$(DEPDIR)/CbcNWay.Plo
	-rm -f ./$(DEPDIR)/CbcNode.Plo
	-rm -f ./$(DEPDIR)/CbcNodeInfo.Plo
	-rm -f ./$(DEPDIR)/CbcObject.Plo
	-rm -f ./$(DEPDIR)/CbcObjectUpdateData.Plo
	-rm -f ./$(DEPDIR)/CbcPartialNodeInfo.Plo
	-rm -f ./$(DEPDIR)/CbcSOS.Plo
	-rm -f ./$(DEPDIR)/CbcSimpleInteger.Plo
	-rm -f ./$(DEPDIR)/CbcSimpleIntegerDynamicPseudoCost.Plo
	-rm -f ./$(DEPDIR)/CbcSimpleIntegerPseudoCost.Plo
	-rm -f ./$(DEPDIR)/CbcSolver.Plo
	-rm -f ./$(DEPDIR)/CbcSolverAnalyze.Plo
	-rm -f ./$(DEPDIR)/CbcSolverExpandKnapsack.Plo
	-rm -f ./$(DEPDIR)/CbcSolverHeuristics.Plo
	-rm -f ./$(DEPDIR)/CbcStatistics.Plo
	-rm -f ./$(DEPDIR)/CbcStrategy.Plo
	-rm -f ./$(DEPDIR)/CbcSubProblem.Plo
	-rm -f ./$(DEPDIR)/CbcSymmetry.Plo
	-rm -f ./$(DEPDIR)/CbcThread.Plo
	-rm -f ./$(DEPDIR)/CbcTree.Plo
	-rm -f ./$(DEPDIR)/CbcTreeLocal.Plo
	-rm -f ./$(DEPDIR)/Cbc_C_Interface.Plo
	-rm -f ./$(DEPDIR)/Cbc_ampl.Plo
	-rm -f ./$(DEPDIR)/CoinSolve.Po
	-rm -f ./$(DEPDIR)/unitTestClp.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includecoinHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-exec-local \
	install-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/CbcBranchAllDifferent.Plo
	-rm -f ./$(DEPDIR)/CbcBranchCut.Plo
	-rm -f ./$(DEPDIR)/CbcBranchDecision.Plo
	-rm -f ./$(DEPDIR)/CbcBranchDefaultDecision.Plo
	-rm -f ./$(DEPDIR)/CbcBranchDynamic.Plo
	-rm -f ./$(DEPDIR)/CbcBranchLotsize.Plo
	-rm -f ./$(DEPDIR)/CbcBranchToFixLots.Plo
	-rm -f ./$(DEPDIR)/CbcBranchingObject.Plo
	-rm -f ./$(DEPDIR)/CbcCbcParam.Plo
	-rm -f ./$(DEPDIR)/CbcClique.Plo
	-rm -f ./$(DEPDIR)/CbcCompareDefault.Plo
	-rm -f ./$(DEPDIR)/CbcCompareDepth.Plo
	-rm -f ./$(DEPDIR)/CbcCompareEstimate.Plo
	-rm -f ./$(DEPDIR)/CbcCompareObjective.Plo
	-rm -f ./$(DEPDIR)/CbcConsequence.Plo
	-rm -f ./$(DEPDIR)/CbcCountRowCut.Plo
	-rm -f ./$(DEPDIR)/CbcCutGenerator.Plo
	-rm -f ./$(DEPDIR)/CbcCutModifier.Plo
	-rm -f ./$(DEPDIR)/CbcCutSubsetModifier.Plo
	-rm -f ./$(DEPDIR)/CbcDummyBranchingObject.Plo
	-rm -f ./$(DEPDIR)/CbcEventHandler.Plo
	-rm -f ./$(DEPDIR)/CbcFathom.Plo
	-rm -f ./$(DEPDIR)/CbcFathomDynamicProgramming.Plo
	-rm -f ./$(DEPDIR)/CbcFixVariable.Plo
	-rm -f ./$(DEPDIR)/CbcFollowOn.Plo
	-rm -f ./$(DEPDIR)/CbcFullNodeInfo.Plo
	-rm -f ./$(DEPDIR)/CbcGenBaB.Po
	-rm -f ./$(DEPDIR)/CbcGenCbcParam.Po
	-rm -f ./$(DEPDIR)/CbcGenCbcParamUtils.Po
	-rm -f ./$(DEPDIR)/CbcGenCtlBlk.Po
	-rm -f ./$(DEPDIR)/CbcGenMessages.Po
	-rm -f ./$(DEPDIR)/CbcGenOsiParam.Po
	-rm -f ./$(DEPDIR)/CbcGenOsiParamUtils.Po
	-rm -f ./$(DEPDIR)/CbcGenParam.Po
	-rm -f ./$(DEPDIR)/CbcGenParamUtils.Po
	-rm -f ./$(DEPDIR)/CbcGenSolution.Po
	-rm -f ./$(DEPDIR)/CbcGenSolvers.Po
	-rm -f ./$(DEPDIR)/CbcGeneral.Plo
	-rm -f ./$(DEPDIR)/CbcGeneralDepth.Plo
	-rm -f ./$(DEPDIR)/CbcGeneric.Po
	-rm -f ./$(DEPDIR)/CbcHeuristic.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDINS.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDW.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDive.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDiveCoefficient.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDiveFractional.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDiveGuided.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDiveLineSearch.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDivePseudoCost.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicDiveVectorLength.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicFPump.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicGreedy.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicLocal.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicPivotAndFix.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicRENS.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicRINS.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicRandRound.Plo
	-rm -f ./$(DEPDIR)/CbcHeuristicVND.Plo
	-rm -f ./$(DEPDIR)/CbcLinked.Plo
	-rm -f ./$(DEPDIR)/CbcLinkedUtils.Plo
	-rm -f ./$(DEPDIR)/CbcMessage.Plo
	-rm -f ./$(DEPDIR)/CbcMipStartIO.Plo
	-rm -f ./$(DEPDIR)/CbcModel.Plo
	-rm -f ./$(DEPDIR)/CbcNWay.Plo
	-rm -f ./$(DEPDIR)/CbcNode.Plo
	-rm -f ./$(DEPDIR)/CbcNodeInfo.Plo
	-rm -f ./$(DEPDIR)/CbcObject.Plo
	-rm -f ./$(DEPDIR)/CbcObjectUpdateData.Plo
	-rm -f ./$(DEPDIR)/CbcPartialNodeInfo.Plo
	-rm -f ./$(DEPDIR)/CbcSOS.Plo
	-rm -f ./$(DEPDIR)/CbcSimpleInteger.Plo
	-rm -f ./$(DEPDIR)/CbcSimpleIntegerDynamicPseudoCost.Plo
	-rm -f ./$(DEPDIR)/CbcSimpleIntegerPseudoCost.Plo
	-rm -f ./$(DEPDIR)/CbcSolver.Plo
	-rm -f ./$(DEPDIR)/CbcSolverAnalyze.Plo
	-rm -f ./$(DEPDIR)/CbcSolverExpandKnapsack.Plo
	-rm -f ./$(DEPDIR)/CbcSolverHeuristics.Plo
	-rm -f ./$(DEPDIR)/CbcStatistics.Plo
	-rm -f ./$(DEPDIR)/CbcStrategy.Plo
	-rm -f ./$(DEPDIR)/CbcSubProblem.Plo
	-rm -f ./$(DEPDIR)/CbcSymmetry.Plo
	-rm -f ./$(DEPDIR)/CbcThread.Plo
	-rm -f ./$(DEPDIR)/CbcTree.Plo
	-rm -f ./$(DEPDIR)/CbcTreeLocal.Plo
	-rm -f ./$(DEPDIR)/Cbc_C_Interface.Plo
	-rm -f ./$(DEPDIR)/Cbc_ampl.Plo
	-rm -f ./$(DEPDIR)/CoinSolve.Po
	-rm -f ./$(DEPDIR)/unitTestClp.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includecoinHEADERS \
	uninstall-libLTLIBRARIES uninstall-local

.MAKE: all install-am install-exec-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags dvi dvi-am html html-am info \
	info-am install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-hook install-exec-local \
	install-html install-html-am install-includecoinHEADERS \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS \
	uninstall-includecoinHEADERS uninstall-libLTLIBRARIES \
	uninstall-local

.PRECIOUS: Makefile


doxygen-docs: 
	if test "$(COIN_HAS_DOXYGEN)" = TRUE; then \
	  if test -d "doxydoc/"; then \
	    if test -f doxydoc/doxygen.conf ; then \
	      $(DOXYTAG_EDIT) \
	        doxydoc/doxygen.conf > doxydoc/doxygen.conf.tmp ; \
	      mv doxydoc/doxygen.conf.tmp doxydoc/doxygen.conf ; \
	    fi ; \
	    doxygen doxydoc/doxygen.conf;\
	  fi;\
	fi

pdf-doxygen-docs: doxygen-docs
	if test "$(COIN_HAS_DOXYGEN)" = TRUE; then \
	  if test -d "doxydoc/latex"; then \
       	    if test "$(COIN_HAS_LATEX)" = TRUE; then \
	      cd doxydoc/latex;\
	      $(MAKE) pdf;\
	      cd -;\
	    fi;\
	  fi;\
	fi

clean-doxygen-docs:
	if test -d "doxydoc"; then \
	  cd doxydoc ;\
	  rm -rf html latex *.log *.tag;\
	fi

install-doxygen-docs: doxygen-docs
	if test "$(COIN_HAS_DOXYGEN)" = TRUE; then \
	  if test -d "doxydoc"; then \
	    test -d "$(DESTDIR)$(doxydocdir)" || \
	         $(mkdir_p) "$(DESTDIR)$(doxydocdir)"; \
	    $(INSTALL_DATA) doxydoc/@coin_doxy_tagname@ \
	        "$(DESTDIR)$(doxydocdir)"; \
	    if test -f "doxydoc/latex/refman.pdf"; then \
	      $(INSTALL_DATA) doxydoc/latex/refman.pdf \
	          "$(DESTDIR)$(doxydocdir)";\
	    fi;\
	    if test -d "doxydoc/html"; then \
	      test -d "$(DESTDIR)$(doxyhtmldir)/search/" || \
	           $(mkdir_p) "$(DESTDIR)$(doxyhtmldir)/search/"; \
	      $(INSTALL_DATA) doxydoc/html/*.* \
	          "$(DESTDIR)$(doxyhtmldir)";\
	      $(INSTALL_DATA) doxydoc/html/search/*.* \
	          "$(DESTDIR)$(doxyhtmldir)/search";\
            fi;\
          fi;\
        fi

# It's not clear that uninstall-doc should also remove doxygen doc'n. Write
# the rules so that the last one will remove pkgdocdir (which should be empty
# by then).

uninstall-doxygen-docs:
	if test -d "$(DESTDIR)$(doxydocdir)"; then \
	  rm -rf "$(DESTDIR)$(doxydocdir)"; \
	fi
	rmdir $(DESTDIR)$(pkgdocdir) || true

install-doc: $(DocFiles)
	$(mkdir_p) "$(DESTDIR)$(pkgdocdir)"
	for file in $(DocFiles); do \
	  if test -f "$$file"; then dir=; else dir="$(srcdir)/"; fi; \
	  if test -f "$$dir$$file"; then \
	    $(INSTALL_DATA) "$$dir$$file" \
	        "$(DESTDIR)$(pkgdocdir)/$$file"; \
	  fi; \
	done

uninstall-doc:
	for file in $(DocFiles); do \
	  rm -f "$(DESTDIR)$(pkgdocdir)/$$file"; \
	done
	rmdir $(DESTDIR)$(pkgdocdir) || true

########################################################################
#                         Maintainer Stuff                             #
########################################################################

# Make sure acinclude is using most recent coin.m4
@MAINTAINER_MODE_TRUE@$(srcdir)/acinclude.m4: $(BUILDTOOLSDIR)/coin.m4
@MAINTAINER_MODE_TRUE@	cat $(LIBTOOLM4) $< > $@

# Make sure the autotools scripts are up to date
@MAINTAINER_MODE_TRUE@$(AUX_DIR)/install-sh: $(BUILDTOOLSDIR)/install-sh
@MAINTAINER_MODE_TRUE@	cp $< $@

@MAINTAINER_MODE_TRUE@$(AUX_DIR)/missing: $(BUILDTOOLSDIR)/missing
@MAINTAINER_MODE_TRUE@	cp $< $@

@MAINTAINER_MODE_TRUE@$(AUX_DIR)/config.guess: $(BUILDTOOLSDIR)/config.guess
@MAINTAINER_MODE_TRUE@	cp $< $@

@MAINTAINER_MODE_TRUE@$(AUX_DIR)/config.sub: $(BUILDTOOLSDIR)/config.sub
@MAINTAINER_MODE_TRUE@	cp $< $@

@MAINTAINER_MODE_TRUE@$(AUX_DIR)/depcomp: $(BUILDTOOLSDIR)/depcomp
@MAINTAINER_MODE_TRUE@	cp $< $@

@MAINTAINER_MODE_TRUE@$(AUX_DIR)/ltmain.sh: $(BUILDTOOLSDIR)/ltmain.sh
@MAINTAINER_MODE_TRUE@	cp $< $@

.PHONY: install-doc uninstall-doc \
	doxygen-docs pdf-doxygen-docs clean-doxygen-docs \
	install-doxygen-docs uninstall-doxygen-docs

########################################################################
#                     Installing manifest (MSVC++)                     #
########################################################################

@COIN_CXX_IS_CL_TRUE@install-exec-hook:
@COIN_CXX_IS_CL_TRUE@	test -s cbc.exe.manifest && \
@COIN_CXX_IS_CL_TRUE@	mt -manifest cbc.exe.manifest -outputresource:cbc.exe;\
@COIN_CXX_IS_CL_TRUE@	cp cbc.exe $(bindir)/cbc.exe

#######################################################################
# Create the Config.h file that has all public defines and install it #
#######################################################################

install-exec-local:
	$(install_sh_DATA) config_cbc.h $(DESTDIR)$(includecoindir)/CbcConfig.h

uninstall-local:
	rm -f $(DESTDIR)$(includecoindir)/CbcConfig.h

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
